name: Deploy Application

on:
  workflow_run:
    workflows: ["Backend CI/CD", "Frontend CI/CD"]
    types:
      - completed
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Update docker-compose.yml with latest image tags
        run: |
          sed -i "s|image: .*promanage-backend:.*|image: ${{ secrets.DOCKERHUB_USERNAME }}/promanage-backend:${{ github.sha }}|g" docker-compose.yml
          sed -i "s|image: .*promanage-frontend:.*|image: ${{ secrets.DOCKERHUB_USERNAME }}/promanage-frontend:${{ github.sha }}|g" docker-compose.yml
      
      # Si vous utilisez un serveur de déploiement, vous pouvez ajouter des étapes pour copier le docker-compose.yml et le déployer
      # Par exemple avec SSH:
      # - name: Copy docker-compose.yml to server
      #   uses: appleboy/scp-action@master
      #   with:
      #     host: ${{ secrets.DEPLOY_HOST }}
      #     username: ${{ secrets.DEPLOY_USER }}
      #     key: ${{ secrets.DEPLOY_KEY }}
      #     source: "docker-compose.yml"
      #     target: "/opt/promanage"
      
      # - name: Deploy with docker-compose
      #   uses: appleboy/ssh-action@master
      #   with:
      #     host: ${{ secrets.DEPLOY_HOST }}
      #     username: ${{ secrets.DEPLOY_USER }}
      #     key: ${{ secrets.DEPLOY_KEY }}
      #     script: |
      #       cd /opt/promanage
      #       docker-compose pull
      #       docker-compose up -d
